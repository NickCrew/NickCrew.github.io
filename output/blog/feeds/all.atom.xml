<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>piggah.xyz</title><link href="https://piggah.xyz/" rel="alternate"></link><link href="https://piggah.xyz/blog/feeds/all.atom.xml" rel="self"></link><id>https://piggah.xyz/</id><updated>2018-08-24T00:00:00-04:00</updated><subtitle>Software Dev and MORE</subtitle><entry><title>Life and Death of a Virtual Machine</title><link href="https://piggah.xyz/blog/life-and-death-of-a-virtual-machine/" rel="alternate"></link><published>2018-07-06T00:00:00-04:00</published><updated>2018-07-06T00:00:00-04:00</updated><author><name>Nick Ferguson</name></author><id>tag:piggah.xyz,2018-07-06:/blog/life-and-death-of-a-virtual-machine/</id><summary type="html">&lt;p&gt;Discussing my VM lifecycle management platform&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h1&gt;Synopsis&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Disscuss the key components to the automated virtual infrastructure of my lab environment.&lt;/strong&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I'm going to do a quick write-up on my host provisioning workflow now that all the pieces are in place and (mostly) functioning as intended. In any large production environment it will be a necessity to have automated processes to handle: Host creation, Life-cycle mangement and patching, provisioning and possibly identity management depending on the environment. We are not yet going to cover things such as logging and monitoring, just the things happening at the birth" of the machine. &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Foreman&lt;/h2&gt;
&lt;p&gt;Foreman lets you define anything you'd normally be able to define with good old virt-install. Resources, storage location, disk type, network interfaces, operating system, the works. You are able to create &lt;em&gt;Host Groups&lt;/em&gt; that act as templates so you don't have to fill out 20 drop-down menus everytime you want a host. Red Hat distributions are able to make use of &lt;em&gt;kickstart&lt;/em&gt; files and Debian distros use a &lt;em&gt;preseed&lt;/em&gt; file. These are used during regular unattended installs and essentially contain all the answers to the questions an OS installer would ask you. You are able to edit and store many variations within Foreman and associate them with operating systems. So you select the template you want to base your guest on and then... &lt;/p&gt;
&lt;p&gt;Foreman is able to run a TFTP server and act as the PXE boot server for your network. When you use PXE, you must configure your DHCP server to tell machines where the TFTP server is located. In my case I had to enter a command in the terminal of my Edgerouter-X. At this point the kernel image is fetched, booted and the kickstart or preseed unattended install commences. You can watch as the installer goes through answering the prompts on your behalf and it is quite rewarding! In my case, Foreman is accessing the Libvirt system the same way you as a user would to define and manage the VMs. Foreman supports many other hypervisors, including ESXi, as well.&lt;/p&gt;
&lt;p&gt;In addition to the regular installer options, the kickstart files can pull in &lt;em&gt;snippets&lt;/em&gt; to instruct the performing of other actions. After the system and packages are installed these commands will be called. Foreman is able to integrate with a FreeIPA server and take advantage of the unattended ipa-client-install command to join your guest to the specified realm. In my case my FreeIPA servers also provide DNS to the network, as well as configure automounting of user home folders and NFS shares. This is quite convenient because as soon as a guest reports that the installation is complete, you can ssh into your IPA user at the machines freshly updated DNS record hostname with all of your files waiting for you. &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Puppet&lt;/h2&gt;
&lt;p&gt;At this point Puppet will begin running any classes assigned to the host through it's host group or individually. Some modules I run on all guests are the configuration of the snmp daemon so that Librenms may discover it and add it to monitoring, the rsyslog daemon so that it may begin sending logs to Graylog, NTP so that it may synchronize its time with the other servers and ssh key injection.  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Katello&lt;/h2&gt;
&lt;p&gt;Katello is a Foreman plugin that allows you to manage &lt;em&gt;Content&lt;/em&gt;. You can sync repositories, either on-demand or download the entire repo. During kickstart the guest will activate its &lt;em&gt;subscription&lt;/em&gt; based on the assigned &lt;em&gt;Life-Cycle Environment&lt;/em&gt;. The life-cycle environment just says what packages and updates a given guest or group of guests should receive. The &lt;em&gt;katello-agent&lt;/em&gt; is installed on the VMs to allow reporting back to Foreman. Katello will manage their updates for you and inform you of any problems. The guests are in regular communication with the Foreman server to check and see if they need packages and initiating puppet runs to apply any changes made through the Puppet Classes. This takes a huge chunk of manual maintenance off your plate. &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;And so the VM is born! Puppet or another configuration management tool will go on to apply configurations needed for it's specific role. If it is a web server, nginx will be set up. If it's a database server then PostgreSQL may be installed and configured at this point. You are able to continously manage your guests through Foreman and it's partner apps throughout it's life until finally it is destroyed. &lt;/p&gt;
&lt;p&gt;It is a lot of work in the beginning setting up such an environment and it does occasionally require some sweet-talking, but for the most part it does a very good job of automating some of the most repetitive aspects of using a virtual environment. Foreman comes with a great dashboard that lets you get an overview of the state of your environment. You can see if any hosts have had failed puppet runs, what configurations have been applied recently and to whom, if they're out of sync with the package repositories or if they're not powered on at all. If you need to dig deeper, extensively detailed reports are available for each host. &lt;/p&gt;</content><category term="Articles"></category><category term="lab"></category><category term="virtualization"></category><category term="applications"></category></entry><entry><title>Libvirt and OpenVSwitch on RHEL 7</title><link href="https://piggah.xyz/blog/libvirt-and-openvswitch-on-rhel-7/" rel="alternate"></link><published>2018-07-22T00:00:00-04:00</published><updated>2018-07-22T00:00:00-04:00</updated><author><name>Nick Ferguson</name></author><id>tag:piggah.xyz,2018-07-22:/blog/libvirt-and-openvswitch-on-rhel-7/</id><summary type="html">&lt;p&gt;How to use OpenVSwitch with Libvirt/Qemu hypervisor on RHEL or CentOS 7&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h1&gt;Synopsis&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Learn how to leverage OpenVSwitch to create a Libvirt network with portgroups for each of our VLANs.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Prequisites&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We will assume that you have installed OVS and Libvirt &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you desire VLAN support, you have a network interface connected to a trunk    &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are using Ubuntu or Debian this will still work, but you will have to configure the &lt;code&gt;/etc/network/interfaces&lt;/code&gt; file or netplan rather than the network-scripts used here. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Creating and Configuring the OVS Bridge&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;Create the OVS bridge&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ovs-vsctl add-br ovsbr0
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Add the interface (&lt;em&gt;eno1&lt;/em&gt; in this case) connected to the trunk&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ovs-vsctl add-port ovsbr0 eno1
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Check the configuration&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ovs-vsctl show
Bridge &lt;span class="s2"&gt;&amp;quot;ovsbr0&amp;quot;&lt;/span&gt;
    Port &lt;span class="s2"&gt;&amp;quot;eno1&amp;quot;&lt;/span&gt;
        Interface &lt;span class="s2"&gt;&amp;quot;eno1&amp;quot;&lt;/span&gt;
    Port &lt;span class="s2"&gt;&amp;quot;ovsbr0&amp;quot;&lt;/span&gt;
        Interface &lt;span class="s2"&gt;&amp;quot;ovsbr0&amp;quot;&lt;/span&gt;
            type: internal
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; It is not necessary to set the &lt;code&gt;tag&lt;/code&gt; or &lt;code&gt;trunk&lt;/code&gt; parameters on the
OVS Port or Bridge for this particular scenario to work&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Assign an IP to the OVS Bridge:&lt;/h4&gt;
&lt;h5&gt;Remove the IP from the physical NIC&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip addr del &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0 dev eno1
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Run dhclient on the OVS bridge&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip link &lt;span class="nb"&gt;set&lt;/span&gt; up ovsbr0
dhclient ovsbr0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: At this point it is ready but it will not persist across reboots without creating and modifying the network scripts&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;
&lt;h3&gt;Configuring the network-scripts&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# /etc/sysconfig/network-scripts/ifcfg-eno1&lt;/span&gt;
&lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OVSPort&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;OVS_BRIDGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ovsbr0&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PROXY_METHOD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;BROWSER_ONLY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;BOOTPROTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DEFROUTE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;IPV4_FAILURE_FATAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;eno1&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;eno1&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ONBOOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;For DHCP&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# /etc/sysconfig/network-scripts/ifcfg-ovsbr0&lt;/span&gt;
&lt;span class="nv"&gt;BOOTPROTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dhcp&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ovsbr0&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DEVICETYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ovs&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;HOTPLUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NM_CONTROLLED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ONBOOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OVSBridge&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You do not have to disable &lt;em&gt;NetworkManager&lt;/em&gt;, however we do not want NetworkManager controlling any of the interfaces involved in our OVS set-up, including the physical NIC and any virtual ports.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Reboot the system or restart networking to confirm everything is working correctly.&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Define the Libvirt Network&lt;/h2&gt;
&lt;p&gt;Here we are assuming two (2) VLANs with IDs &lt;strong&gt;50&lt;/strong&gt; and &lt;strong&gt;60&lt;/strong&gt;, plus a virtual trunk: &lt;strong&gt;vlan-all&lt;/strong&gt;.  &lt;/p&gt;
&lt;p&gt;Each VLAN will be a Libvirt network &lt;em&gt;portgroup&lt;/em&gt; that you may select using any of the Libvirt-client tools.  &lt;/p&gt;
&lt;h3&gt;Create an XML file&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- /tmp/ovs-network.xml --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;network&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;ovs-network&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;forward&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;bridge&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;bridge&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ovsbr0&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;virtualport&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;openvswitch&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;portgroup&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;vlan-01&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;default=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/portgroup&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;portgroup&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;vlan-50&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;vlan&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;tag&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;50&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/vlan&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/portgroup&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;portgroup&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;vlan-all&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;vlan&lt;/span&gt; &lt;span class="na"&gt;trunk=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;tag&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;50&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;tag&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;60&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/vlan&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/portgroup&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/network&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Define the network&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh net-define /tmp/ovs-network.xml
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Start the network&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh net-start ovs-network
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Have the network start on boot&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;virsh net-autostart ovs-network&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now when you start a guest they will be on the subnet of the portgroup you select.&lt;br&gt;
If you select &lt;strong&gt;vlan-all&lt;/strong&gt; then that is a trunk interface (like the one coming into your physical NIC).  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This is far from the only way to use OVS with KVM/Libvirt guests but
I believe it by the simplest and easiest. One beneift of using OVS
is that guests on the same hypervisor, on the same subnet will communicate at virtio speed because they do not have to go back out over copper.&lt;/p&gt;</content><category term="Tutorials"></category><category term="OpenVSwitch"></category><category term="virtualization"></category><category term="kvm"></category><category term="libvirt"></category><category term="networking"></category></entry><entry><title>Foreman and FreeIPA Realm Integration</title><link href="https://piggah.xyz/blog/foreman-and-freeipa-realm-integration/" rel="alternate"></link><published>2018-08-02T00:00:00-04:00</published><updated>2018-08-02T00:00:00-04:00</updated><author><name>Nick Ferguson</name></author><id>tag:piggah.xyz,2018-08-02:/blog/foreman-and-freeipa-realm-integration/</id><summary type="html">&lt;p&gt;How to integrate FreeIPA with Foreman and Katello for automatic DNS records, Home directory mounting, SSH keys and Identity Management during VM provisioning.&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h1&gt;Synopsis&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;A configuration by which  hosts created with Foreman auto-join your FreeIPA Realm and registered as IPA hosts&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;FreeIPA Host&lt;/h2&gt;
&lt;p&gt;We need to create an IPA user for foreman. I used &lt;em&gt;"foreman-user"&lt;/em&gt; but you can choose something different if you'd like. This article will assume &lt;em&gt;"foreman-user"&lt;/em&gt;. Avoid foreman-proxy or other usernames that occur as users on the Foreman host. Assign this user the &lt;strong&gt;role&lt;/strong&gt; of &lt;em&gt;Smart Proxy Host Manager&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Before beginning, your Foreman host needs to be registered as an IPA host. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;ipa-client-install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We need to create a &lt;strong&gt;service&lt;/strong&gt; for the Foreman proxy.  &lt;/p&gt;
&lt;p&gt;If you're using the FreeIPA webui:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Identity =&amp;gt; Services =&amp;gt; "add +"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;foremanproxy/foreman.example.com@EXAMPLE.COM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;Foreman Host&lt;/h2&gt;
&lt;p&gt;You need to install the &lt;strong&gt;ipa-admintools&lt;/strong&gt; package:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;yum install ipa-admintools&lt;/span&gt;
&lt;span class="err"&gt;foreman-prepare-realm admin foreman-user&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We need to edit some config files. These are the relevant sections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### /etc/foreman-proxy/settings.d/freeipa_realm.yml&lt;/span&gt;

&lt;span class="c1"&gt;# Authentication for Kerberos-based Realms&lt;/span&gt;
:keytab_path: /etc/foreman-proxy/freeipa.keytab
:principal: foreman-user@EXAMPLE.COM

:ipa_config: /etc/ipa/default.conf
&lt;span class="c1"&gt;# Remove from DNS when deleting the FreeIPA entry&lt;/span&gt;
:remove_dns: &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;/etc/foreman-proxy/settings.d/freeipa_realm.yml&lt;/strong&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### /etc/foreman-proxy/settings.d/realm.yml&lt;/span&gt;

&lt;span class="c1"&gt;# Can be true, false, or http/https to enable just one of the protocols&lt;/span&gt;
:enabled: &lt;span class="nb"&gt;true&lt;/span&gt;

&lt;span class="c1"&gt;# Available providers:&lt;/span&gt;
&lt;span class="c1"&gt;#   realm_ad&lt;/span&gt;
&lt;span class="c1"&gt;#   realm_freeipa&lt;/span&gt;
:use_provider: realm_freeipa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;/etc/foreman-proxy/settings.d/realm.yml&lt;/strong&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;FreeIPA Host&lt;/h3&gt;
&lt;p&gt;Copy the keytab from the IPA server, where &lt;em&gt;freeipa&lt;/em&gt; is the hostname of your IPA server and &lt;em&gt;foremanproxy&lt;/em&gt; is the name of the service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ipa-getkeytab -s freeipa.example.com -p foremanproxy/freeipa.example.com -k /etc/krb5.keytab *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Copy the keytab to the appropriate location:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp freeipa.keytab /etc/foreman-proxy/freeipa.keyab
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make the foreman-proxy user owner and set correct permissions:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chown foreman-proxy /etc/foreman-proxy/freeipa.leytab
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chmod &lt;span class="m"&gt;600&lt;/span&gt; /etc/foreman-proxy/freeipa.keytab
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /etc/ipa/ca.crt /etc/pki/ca-trust/source/anchors/ipa.crt
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;update-ca-trust &lt;span class="nb"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; update-ca-trust
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl restart foreman-proxy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Test the keytab is present:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   sudo -u foreman-user kinit -k -t /etc/foreman-proxy/freeipa.keytab foreman-user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should now be able to select your realm in the Foreman webui  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Infrastructure =&amp;gt; Realms&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Ensure your provisioning template calls the &lt;strong&gt;&lt;em&gt;freeipa_register&lt;/em&gt;&lt;/strong&gt; snippet. Read over the snippet to see optional host parameters you may set.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are using FreeIPA as your DNS server and you would like the records automatically updated, set the following host parameter:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Name: freeipa_opts Value: —enable-dns-updates&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are using the automount feature of FreeIPA:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Name: freeipa_automount Value: true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now when you create a host, as long as you have your realm selected, it should automatically join the realm and register with the server.  &lt;/p&gt;</content><category term="Tutorials"></category><category term="virtualization"></category><category term="platforms"></category><category term="dns"></category><category term="freeipa"></category><category term="identity"></category></entry><entry><title>Live External VM Snapshots for Libvirt</title><link href="https://piggah.xyz/blog/live-external-vm-snapshots-for-libvirt/" rel="alternate"></link><published>2018-08-08T00:00:00-04:00</published><updated>2018-08-08T00:00:00-04:00</updated><author><name>Nick Ferguson</name></author><id>tag:piggah.xyz,2018-08-08:/blog/live-external-vm-snapshots-for-libvirt/</id><summary type="html">&lt;p&gt;How to take live, external snaphots of a Qemu guest machine using libvirt and virsh.&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h1&gt;Synopsis&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;In this tutorial we are going to take an external snapshot of a running VM.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;External vs Internal Snapshots&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;QCOW2&lt;/em&gt; disk images have the ability to store snapshots within the image itself. This can
have its uses, but an external snapshot is faster and allows us to safely store a copy
of the file system at that point. Red Hat also recommends external snapshots as the
preferred snapshotting method.  &lt;/p&gt;
&lt;h2&gt;Live Block Commit&lt;/h2&gt;
&lt;p&gt;In simple terms, live block commit allows us to take a snapshot, operate a given period
of time with that snapshot as the primary disk image, and then 'merge' the virtual disks
with all changes since the snapshot saved.  &lt;/p&gt;
&lt;p&gt;This is useful to us because we are going to:&lt;br&gt;
1. Take a snapshot&lt;br&gt;
2. Copy the original disk image to our backup location&lt;br&gt;
3. Use block commit to merge the snapshot back into the original disk image.&lt;/p&gt;
&lt;h2&gt;Supported Qemu Versions&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Qemu&lt;/em&gt; is the hardware emulator used with &lt;em&gt;KVM&lt;/em&gt;, the Linux kernel module that enables virtualization  and &lt;em&gt;Libvirt&lt;/em&gt;, the user-space virtual resource manager. You need to be using &lt;em&gt;Qemu&lt;/em&gt; version &lt;strong&gt;2.5&lt;/strong&gt; or greater to create external snapshots. This is a problem if you're running CentOS 7, but it is easily remedied by installing the version of the qemu-kvm package from the oVirt/RHEV
repositories. If you are using Ubuntu then it will be included in the package available in the repos.&lt;/p&gt;
&lt;h3&gt;Using oVirt Repo on CentOS 7&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install centos-release-qemu-ev qemu-kvm-ev
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h3&gt;Qemu Guest Agent&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You should install the &lt;strong&gt;qemu-guest-agent&lt;/strong&gt; package on all of your guests. Having the agent installed
allows you to perform operations on the guest machine without logging in such as freezing the
file system, rebooting and shutdown safely. We will issue a flag with our snapshot command that
freezes the file system during the time which it is taken to ensure there is no data loss.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;How to set-up the qemu-guest-agent&lt;/h3&gt;
&lt;p&gt;On the guest machine install the &lt;code&gt;qemu-guest-agent&lt;/code&gt; package using yum, dnf or apt depending on
your distro.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Create a virtual device in the guests definition&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;virsh edit YOUR_DOMAIN&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Inside the tagsa&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;devices&amp;gt;&amp;lt;/devices&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Insert:&lt;/strong&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;channel&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;unix&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;target&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;virtio&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;org.qemu.guest_agent.0&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;address&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;virtio-serial&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;controller=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;bus=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;port=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;*&lt;strong&gt;Note:&lt;/strong&gt; If you already have a serial port on the guest, you may need to change &lt;strong&gt;port='1'&lt;/strong&gt; to a higher port number.  &lt;/p&gt;
&lt;p&gt;Now you can use the &lt;em&gt;&lt;strong&gt;--quiesce&lt;/strong&gt;&lt;/em&gt; flag with &lt;em&gt;virsh&lt;/em&gt; commands to freeze a guest machine's file machine.  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;The Snapshot Command&lt;/h2&gt;
&lt;p&gt;We will use the &lt;strong&gt;virsh&lt;/strong&gt; tool.  &lt;/p&gt;
&lt;p&gt;The &lt;em&gt;domain&lt;/em&gt; is the name your guest was defined as. To see a list of all guest domains on your system 
you can run:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;virsh list --all&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To see the virtual disks in use by a given domain:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;virsh domblklist YOUR_DOMAIN&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here is example output for my Katello host:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virsh domblklist katello
Target     Source
------------------------------------------------
vda        /vm_storage/foreman-katello.qcow2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To see a domain's current snapshots:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;virsh snapshot-list YOUR_DOMAIN&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;Taking the snapshot&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh snapshot-create-as &lt;span class="se"&gt;\&lt;/span&gt;
--domain YOUR_DOMAIN guest-state-1 &lt;span class="se"&gt;\&lt;/span&gt;
--diskspec vda,file&lt;span class="o"&gt;=&lt;/span&gt;/your/storage/pool/YOUR_DOMAIN-overlay-1.qcow2 &lt;span class="se"&gt;\&lt;/span&gt;
--disk-only --atomic --quiesce
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;virsh domblklist&lt;/code&gt; command should now show the overlay image as the virtual disk in use.  &lt;/p&gt;
&lt;p&gt;You are now able to copy the original disk image to a backup location as it is not being 
actively written to. &lt;/p&gt;
&lt;p&gt;Once the copy is finished it's time to perform a live block commit:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh blockcommit YOUR_DOMAIN vda --active --verbose --pivot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If successful you see the following output:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Performing live block commit...
Block commit: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt; %&lt;span class="o"&gt;]&lt;/span&gt;
Successfully pivoted
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And that's it! A successful external snapshot with live block commit.  &lt;/p&gt;
&lt;h4&gt;Scripting It&lt;/h4&gt;
&lt;p&gt;I have written a shell script that performs a live snapshot and backup with the following usage:&lt;br&gt;
&lt;code&gt;./live-blockcommit-snap YOUR_DOMAIN /your/backup/location&lt;/code&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Take an external snapshot with virsh using live block commit feature&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Usage: ./live-blockcommit-snap domain-name /backup/destination &lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Creates log collection directory in backup-destination&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# You must have the qemu-guest-agent installed and enabled on the guest, otherwise&lt;/span&gt;
&lt;span class="c1"&gt;# the --quiesce argument must be removed from the snapshot-create command&lt;/span&gt;
&lt;span class="c1"&gt;# before the script will function. &lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Nicholas Ferguson 2018 MIT License https://gitlab.com/nickopotamus/&lt;/span&gt;


&lt;span class="nv"&gt;DOMAIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;

&lt;span class="c1"&gt;# check if guest is running&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;virsh list --all &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DOMAIN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $3}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;NR==1{print $1}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;running&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Guest running...continuing...&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Guest is not running...stopping...&amp;quot;&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# check for correct arguments&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -ne &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Missing arguments! Provide domain and backup directory.&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# does the backup destination exit&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; ! &lt;span class="o"&gt;[&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt; not found!&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# is the backup destination a directory&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; ! &lt;span class="o"&gt;[&lt;/span&gt; -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt; is not a directory!&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt; 

&lt;span class="c1"&gt;# generate time stamp&lt;/span&gt;
&lt;span class="nv"&gt;TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;date &lt;span class="s2"&gt;&amp;quot;+%Y%m%d-%H%M%S&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="nv"&gt;BACKUP_DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# create backup dir if it does not exist&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BACKUP_DEST&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BACKUP_DEST&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# label snapshot with timestamp&lt;/span&gt;
&lt;span class="nv"&gt;STATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;_&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$TIME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# take care of logging&lt;/span&gt;
&lt;span class="nv"&gt;LOG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;/snapshot_logs
&lt;span class="o"&gt;[&lt;/span&gt; -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$LOG_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$LOG_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;SNAP_LOG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$LOG_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DOMAIN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;_latest.log
rm &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$SNAP_LOG&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
touch &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$SNAP_LOG&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="nb"&gt;trap&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;exec 2&amp;gt;&amp;amp;4 1&amp;gt;&amp;amp;3&amp;#39;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$SNAP_LOG&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;


&lt;span class="c1"&gt;# name the overlay file&lt;/span&gt;
&lt;span class="nv"&gt;OVERLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$STATE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;_overlay

&lt;span class="c1"&gt;# target is domain name, image is virtual disk file&lt;/span&gt;
&lt;span class="nv"&gt;TARGET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;virsh domblklist --details &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ^file &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $3}&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;IMAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;virsh domblklist --details &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ^file &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $4}&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;POOLDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;dirname &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$IMAGE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="c1"&gt;# take the snapshot. will fail without a working qemu-guest-agent&lt;/span&gt;
virsh snapshot-create-as --domain &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$STATE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
--diskspec &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,file&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$POOLDIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$OVERLAY&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;.qcow2 &lt;span class="se"&gt;\&lt;/span&gt;
--disk-only &lt;span class="se"&gt;\&lt;/span&gt;
--atomic &lt;span class="se"&gt;\&lt;/span&gt;
--quiesce

&lt;span class="c1"&gt;# perform the backup&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Copying image to backup location...&amp;quot;&lt;/span&gt;
cp -a &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$IMAGE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BACKUP_DEST&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$STATE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# live block commit&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Performing live block commit...&amp;quot;&lt;/span&gt;
virsh blockcommit &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; --active --verbose --pivot

&lt;span class="c1"&gt;# remove the overlay file&lt;/span&gt;
rm &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$POOLDIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$OVERLAY&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;.qcow2

&lt;span class="c1"&gt;# remove the snapshot from domain&lt;/span&gt;
virsh snapshot-delete &lt;span class="nv"&gt;$1&lt;/span&gt; --metadata &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$STATE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Current snapshots attached to this guest:&amp;#39;&lt;/span&gt;
virsh snapshot-list &lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;------------------------&amp;#39;&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Most recent external snapshots:&amp;#39;&lt;/span&gt;
ls &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BACKUP_DEST&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;------------------------&amp;#39;&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Current disk image in use:&amp;#39;&lt;/span&gt;
virsh domblklist &lt;span class="nv"&gt;$DOMAIN&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tutorials"></category><category term="virtualization"></category><category term="libvirt"></category><category term="kvm"></category></entry><entry><title>Cloud-init Quick Launcher</title><link href="https://piggah.xyz/blog/cloud-init-quick-launcher/" rel="alternate"></link><published>2018-08-24T00:00:00-04:00</published><updated>2018-08-24T00:00:00-04:00</updated><author><name>Nick Ferguson</name></author><id>tag:piggah.xyz,2018-08-24:/blog/cloud-init-quick-launcher/</id><summary type="html">&lt;p&gt;Configure and launch cloud-init images using a simple python script&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h1&gt;Synopsis&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Quickly launch and provision VMs from cloud-init images uses a simple Python script&lt;/strong&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Cloud images are pre-built VMs, essentially, configurable by a &lt;strong&gt;user-data&lt;/strong&gt; script. They  rely on the cloud-init package, which is already installed on the image at the time you boot it. Cloud images are typically 200-300mb and can come in a variety of formats,common ones being .qcow2 and .raw. They start very quickly since you are skipping the installation and going straight to the provisioning. You can supply a huge number of provisioning options in the user-data file. They are primarily used by public cloud  platforms, OpenStack deployments, etc.  &lt;/p&gt;
&lt;hr&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shutil&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;errno&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;socket&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;

&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Launch a VM with cloud-init. Ubuntu Bionic or Fedora 28.&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hostname for your new VM.&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--memory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1024&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Specify memory in MBs. Default is 1024.&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;--distro&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s1"&gt;&amp;#39;fedora&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Choose Ubuntu or Fedora. Default is ubuntu.&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%(levelname)s&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%(messages)s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;dir_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;distro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;src_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dir_path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;distro&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.img&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;distro&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;vm_vari&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ubuntu16.04&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Fedora-Cloud-Base-28-1.1.x86_64.qcow2&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;vm_vari&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fedora27&amp;quot;&lt;/span&gt;


&lt;span class="c1"&gt;# Make sure we have an Ubuntu cloud image, download latest if not&lt;/span&gt;
&lt;span class="n"&gt;fcheck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src_img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;fcheck&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;We need to download the cloud image. One moment please.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fileName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;src_img&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;out_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copyfileobj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cloud image obtained.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;vm_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;vm_ram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# new vm will go in the os/ directory&lt;/span&gt;
&lt;span class="n"&gt;vm_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dir_path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/os/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;vm_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.img&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# copy the new virtual disk we will install to&lt;/span&gt;
&lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vm_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# create the temp working dir. assuming the repo was cloned you have a&lt;/span&gt;
&lt;span class="c1"&gt;# templates/ folder with user-data and meta-data files&lt;/span&gt;
&lt;span class="n"&gt;tmp_drive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/tmp/drives/latest&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_drive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rmtree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_drive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_drive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;templates_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dir_path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/templates&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;templates_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/meta-data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp_drive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;templates_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/user-data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp_drive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Create a meta-data file with the desired hostname&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_drive&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/meta-data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;filedata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;filedata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filedata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@@HOSTNAME@@&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vm_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_drive&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/meta-data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filedata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Generate the configuration iso&lt;/span&gt;
&lt;span class="n"&gt;iso_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dir_path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/os/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;vm_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-cidata.iso&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;genisoimage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-volid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cidata&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-joliet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-rock&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;-input-charset&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;iso8859-1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-output&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iso_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp_drive&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/user-data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp_drive&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/meta-data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;


&lt;span class="c1"&gt;# Install and launch the VM&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;virt-install&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--import&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vm_name&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--vcpus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--memory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vm_ram&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--os-type=linux&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--os-variant=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;vm_vari&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--network=default,model=virtio&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--vnc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--noautoconsole&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--disk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vm_path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;,format=qcow2,bus=virtio&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--disk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;dir_path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/os/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;vm_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-cidata.iso&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;,device=cdrom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vinst_cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Cleanup. Eject cdrom, delete tmp folders and iso&lt;/span&gt;
&lt;span class="c1"&gt;#subprocess.call([&amp;#39;virsh change-media&amp;#39;, vm_name + &amp;#39; hda --eject&amp;#39;])&lt;/span&gt;
&lt;span class="c1"&gt;#os.remove(iso_path)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content><category term="Tutorials"></category><category term="virtualization"></category><category term="python"></category><category term="libvirt"></category><category term="kvm"></category><category term="snippets"></category></entry></feed>